{{- if and .Values.kafka.enabled .Values.logstash.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-logstash
  labels: {{ include "logging.labels" . | indent 4 }}
spec:
  replicas: {{ .Values.logstash.replicas }}
  selector:
    matchLabels: {{ include "logging.selectorLabels" . | indent 6 }}
      type: logstash
  template:
    metadata:
      labels: {{ include "logging.selectorLabels" . | indent 8 }}
        type: logstash
        {{- with .Values.logstash.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/logstash/logstash-configmap.yaml") . | sha256sum }}
    spec:
      priorityClassName: {{ default .Values.priorityClass .Values.logstash.priorityClass }}
      serviceAccountName: {{ .Release.Name }}-logstash
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.logstash.topologySpreadConstraints }}
      topologySpreadConstraints: {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      - name: init
        imagePullPolicy: {{ .Values.init_container.imagePullPolicy }}
        image: {{ include "init_container.image" . }}
        {{- if .Values.kafka.enabled }}
        command: ["sh","-c",'/init/check_os.sh && /init/check_host_port.sh $kafka 9092']
        {{- else }}
        command: ["sh","-c",'/init/check_os.sh']
        {{- end }}
        env:
        - name: os_url
          value: {{ include "os_url" . }}
        - name: os_user
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-opensearch-credentials-admin
              key: username
        - name: os_pass
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-opensearch-credentials-admin
              key: password
        - name: kafka
          value: {{ .Release.Name }}-kafka-{{ (sub (.Values.kafka.replicas | int) 1) }}
        volumeMounts:
        - name: certificates
          mountPath: /ssl/root-ca.pem
          subPath: ca.crt
        - mountPath: "/init"
          name: init
      containers:
      - name: logstash
        image: {{ .Values.logstash.image }}:{{ .Values.logstash.imageTag }}
        resources: {{ toYaml .Values.logstash.resources | nindent 10 }}
        ports:
        - containerPort: 9600
          name: monitoring-api
          protocol: TCP
        {{- if not .Values.kafka.enabled }}
        - containerPort: 5044
          name: containers
          protocol: TCP
        {{- end }}
        env:
        - name: os_url
          value: {{ include "os_url" . }}
        - name: os_user
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-opensearch-credentials-admin
              key: username
        - name: os_pass
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-opensearch-credentials-admin
              key: password
        - name: kafka_brokers
          value: {{ include "kafkaBrokers" (dict "replicas" .Values.kafka.replicas "releaseName" $.Release.Name) }}
        - name: LS_JAVA_OPTS
          value: "-Xms{{ .Values.logstash.heapSize }} -Xmx{{ .Values.logstash.heapSize }}"
        volumeMounts:
        - mountPath: "/usr/share/logstash/config"
          name: config
        - mountPath: "/usr/share/logstash/pipeline"
          name: pipelines
        - name: certificates
          mountPath: /usr/share/logstash/certs/root-ca.pem
          subPath: ca.crt
      {{- if .Values.logstash.monitoring.enabled }}
      - name: exporter
        image: {{ .Values.logstash.monitoring.image }}:{{ .Values.logstash.monitoring.imageTag }}
        args:
          - --logstash.endpoint=http://localhost:9600
          - --web.listen-address=:{{ .Values.logstash.monitoring.metricsPort }}
        ports:
         - containerPort: {{ .Values.logstash.monitoring.metricsPort }}
           name: metrics
           protocol: TCP
        resources:
          requests:
            memory: "50Mi"
            cpu: "10m"
          limits:
            memory: "100Mi"
            cpu: "100m"
      {{- end }}
      volumes:
      - name: init
        configMap:
          name: {{ .Release.Name }}-init
          defaultMode: 0755
      - name: config
        configMap:
          name: {{ .Release.Name }}-logstash
      - name: pipelines
        configMap:
          name: {{ .Release.Name }}-logstash-pipelines
      - name: certificates
        secret:
          secretName: {{ .Release.Name }}-opensearch-certificates
      {{- with .Values.logstash.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.logstash.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
{{- end }}