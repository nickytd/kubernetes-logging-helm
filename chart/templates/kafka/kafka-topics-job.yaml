{{- if .Values.kafka.enabled }}
kind: Job
apiVersion: batch/v1
metadata:
  name: {{ .Release.Name }}-topics-config
  labels: {{ include "logging.labels" . | indent 4 }}
  annotations:
    "helm.sh/hook": "post-install, post-upgrade"
    "helm.sh/hook-weight": "-8"
    "helm.sh/hook-delete-policy": "before-hook-creation"
spec:
  backoffLimit: 10
  template:
    metadata:
      annotations:
        "sidecar.istio.io/inject": "false"
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 6 }}
      {{- end }}
      initContainers:
      - name: init
        image: {{ include "init_container.image" . }}
        imagePullPolicy: {{ .Values.init_container.imagePullPolicy }}
        command: ["sh", "-c", "/init/check_host_port.sh $kafka 9092"]
        env:
          - name: kafka
            value: {{ .Release.Name }}-kafka-{{ (sub (.Values.kafka.replicas | int) 1) }}
        volumeMounts:
        - mountPath: "/init"
          name: init
      containers:
      - name: kafka
        image: {{ .Values.kafka.image }}:{{ .Values.kafka.imageTag }}
        command: ["/bin/sh","-c","/topics-conf/setup.sh"]
        env:
        - name: kafka
          value: {{ printf "%s-kafka-0.%s.svc.cluster.local:9092" .Release.Name .Release.Namespace }}
        - name: replicas
          value: "{{ (sub ($.Values.kafka.replicas | int) 1) }}"
        volumeMounts:
        - name: setup
          mountPath: /topics-conf/setup.sh
          subPath: setup.sh
        - name: setup
          mountPath: /topics-conf/topics.conf
          subPath: topics.conf
      restartPolicy: Never
      volumes:
      - name: init
        configMap:
          name: {{ .Release.Name}}-init
          defaultMode: 0755
      - name: setup
        configMap:
          name: {{ .Release.Name }}-kafka-topics
          defaultMode: 0755
{{- end }}
