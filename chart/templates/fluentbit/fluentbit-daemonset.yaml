apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: {{ .Release.Name}}-fluentbit
  labels: {{ include "logging.selectorLabels" . | indent 4 }}
    k8s-app: fluentbit
spec:
  selector:
    matchLabels: {{ include "logging.selectorLabels" . | indent 6 }}
      k8s-app: fluentbit
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/fluentbit/fluentbit-config.yaml") . | sha256sum }}
      labels: {{ include "logging.selectorLabels" . | indent 8 }}
        k8s-app: fluentbit
    spec:
      priorityClassName: {{ default .Values.priorityClass .Values.fluentbit.priorityClass }}
      securityContext:
        runAsUser: 0
      serviceAccountName: {{ .Release.Name}}-fluentbit
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets: {{ toYaml . | nindent 6 }}
      {{- end }}
      initContainers:
      - name: init
        imagePullPolicy: {{ .Values.init_container.imagePullPolicy }}
        image: {{ include "init_container.image" . }}
        {{- if .Values.kafka.enabled }}
        command: ["sh","-c",'/init/check_os.sh && /init/check_job.sh && /init/check_host_port.sh $kafka 9092']
        {{ else }}
        command: ["sh","-c",'/init/check_os.sh && /init/check_job.sh']
        {{- end }}
        env:
          - name: job_name
            value: {{ .Release.Name }}-index-templates
          - name: job_namespace
            value: {{ .Release.Namespace }}
          - name: os_url
            value: {{ include "os_url" . }}
          - name: os_user
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-opensearch-credentials-admin
                key: username
          - name: os_pass
            valueFrom:
              secretKeyRef:
                name: {{ .Release.Name }}-opensearch-credentials-admin
                key: password
          - name: kafka
            value: {{ .Release.Name }}-kafka-{{ (sub (.Values.kafka.replicas | int) 1) }}
        volumeMounts:
        - mountPath: "/init"
          name: init
      containers:
      - name: fluentbit
        image: {{ .Values.fluentbit.image }}:{{ .Values.fluentbit.imageTag }}
        imagePullPolicy: {{ .Values.fluentbit.imagePullPolicy }}
        resources: {{ toYaml .Values.fluentbit.resources | nindent 10 }}
        ports:
          - name: http
            containerPort: 2020
        env:
        - name: FLUENT_opensearch_HOST
          value: "{{ include "os_host" . }}"
        - name: FLUENT_opensearch_PORT
          value: "{{ include "os_port" . }}"
        - name: FLUENT_opensearch_USER
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-opensearch-credentials-admin
              key: username
        - name: FLUENT_opensearch_PASSWORD
          valueFrom:
            secretKeyRef:
              name: {{ .Release.Name }}-opensearch-credentials-admin
              key: password
        {{- if .Values.fluentbit.extraEnvs }}
          {{- toYaml .Values.fluentbit.extraEnvs | nindent 8 }}
        {{- end }}
        livenessProbe:
          httpGet:
            path: /api/v1/health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
        volumeMounts:
        - name: containerslog
          mountPath: /var/log/pods
          readOnly: true
        {{- if .Values.fluentbit.containersRuntime }}
        - name: varlibdockercontainers
          mountPath: /var/lib/docker/containers
        {{- end }}
        - name: journallog
          mountPath: /run/log
          readOnly: true
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc
        - name: certificates
          mountPath: /fluent-bit/ssl/root-ca.pem
          subPath: ca.crt
        - name: admin-certificate
          mountPath: /fluent-bit/ssl/admin.pem
          subPath: tls.crt
        - name: admin-certificate
          mountPath: /fluent-bit/ssl/admin-key.pem
          subPath: tls.key
      - name: fluentbit-config-watcher
        image: {{ .Values.fluentbitConfigWatcher.image }}:{{ .Values.fluentbitConfigWatcher.imageTag }}
        imagePullPolicy: {{ .Values.fluentbitConfigWatcher.imagePullPolicy }}
        volumeMounts:
        - name: fluent-bit-config
          mountPath: /fluent-bit/etc
      terminationGracePeriodSeconds: 10
      shareProcessNamespace: true
      volumes:
      - name: init
        configMap:
          name: {{ .Release.Name}}-init
          defaultMode: 0755
      - name: journallog
        hostPath:
          path: {{ .Values.fluentbit.journalsLogsHostPath }}
      - name: containerslog
        hostPath:
          path: {{ .Values.fluentbit.containersLogsHostPath }}
      {{- if .Values.fluentbit.containersRuntime }}
      - name: varlibdockercontainers
        hostPath:
          path: /var/lib/docker/containers
      {{- end }}
      - name: fluent-bit-config
        configMap:
          name: {{ .Release.Name}}-fluentbit
      - name: certificates
        secret:
          secretName: {{ .Release.Name }}-opensearch-certificates
      - name: admin-certificate
        secret:
          secretName: {{ .Release.Name }}-opensearch-admin-certificate
      {{- with .Values.fluentbit.affinity }}
      affinity: {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.fluentbit.tolerations }}
      tolerations: {{ toYaml . | nindent 8 }}
      {{- end }}
